{"version":3,"file":"static/js/389.e7df16a1.chunk.js","mappings":"sPACA,GAAgB,KAAO,uBAAuB,QAAU,0BAA0B,OAAS,yBAAyB,KAAO,wB,SC+B3H,EA9BiB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KAClB,EAIIA,EAHFC,KAAAA,OADF,MACS,iBADT,IAIID,EAFFE,UAAAA,OAFF,MAEc,uBAFd,EAGEC,EACEH,EADFG,aAGIC,EAAgBD,EAAY,yCACIA,GAClC,4FAEJ,OACE,eAAIE,UAAWC,EAAAA,KAAf,UACE,iBAAKD,UAAWC,EAAAA,QAAhB,WACE,gBAAKD,UAAWC,EAAAA,cAAhB,UACE,gBACED,UAAWC,EAAAA,OACXC,IAAG,UAAKH,GACRI,IAAG,UAAKP,QAGZ,iBAAKI,UAAWC,EAAAA,QAAhB,WACE,cAAGD,UAAWC,EAAAA,KAAd,SAAyBL,KACzB,uCAAeC,YAKxB,EC7BD,EAAuB,mBC+CvB,EA1Ca,WACX,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOX,EAAP,KAAaY,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,WAArC,eAAOE,EAAP,KAAeC,EAAf,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,gHAIaC,EAAAA,EAAAA,IAAqBP,GAJlC,gBAGaT,EAHb,EAGKiB,KAAQjB,KAEVY,EAAQZ,GACRc,EAAU,YANb,gDAQGI,QAAQC,IAAR,MACAL,EAAU,YATb,wDAAD,EAYD,GAAE,CAACL,IAEW,YAAXI,GACK,6CAGM,aAAXA,GACK,oDAGM,aAAXA,GAEA,0BACE,gBAAIR,UAAWC,EAAf,UACGN,EAAKoB,KAAI,SAAApB,GAAI,OACZ,SAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKqB,GADR,IAGG,IAAhBrB,EAAKsB,QAAgB,4BAP9B,CAYD,C,oKC1CDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAFE,6NAIK,IAAMC,EAAc,WACzB,OAAOD,EAAAA,EAAAA,IAAA,qBACR,EAEYE,EAAqB,SAAAxB,GAChC,OAAOsB,EAAAA,EAAAA,IAAA,6BAAgCtB,EAAhC,WACR,EAEYyB,EAAgB,SAAAjB,GAC3B,OAAOc,EAAAA,EAAAA,IAAA,gBAAmBd,GAC3B,EAEYO,EAAuB,SAAAP,GAClC,OAAOc,EAAAA,EAAAA,IAAA,gBAAmBd,EAAnB,YACR,EAEYkB,EAAuB,SAAAlB,GAClC,OAAOc,EAAAA,EAAAA,IAAA,gBAAmBd,EAAnB,YACR,C","sources":["webpack://goit-react-hw-05-movies/./src/components/CastItem/CastItem.module.css?d4dc","components/CastItem/CastItem.jsx","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/themoviedb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CastItem_item__CwDkT\",\"wrapper\":\"CastItem_wrapper__YLQmg\",\"images\":\"CastItem_images__KsF4y\",\"name\":\"CastItem_name__jzNo7\"};","import css from './CastItem.module.css';\n\nconst CastItem = ({ cast }) => {\n  const {\n    name = 'name not found',\n    character = 'character not found ',\n    profile_path,\n  } = cast;\n\n  const actorPhotoUrl = profile_path\n    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n    : 'https://t4.ftcdn.net/jpg/03/46/93/61/360_F_346936114_RaxE6OQogebgAWTalE1myseY1Hbb5qPM.jpg';\n\n  return (\n    <li className={css.item}>\n      <div className={css.wrapper}>\n        <div className={css.imagesWrapper}>\n          <img\n            className={css.images}\n            src={`${actorPhotoUrl}`}\n            alt={`${name}`}\n          />\n        </div>\n        <div className={css.details}>\n          <p className={css.name}>{name}</p>\n          <p>Character: {character}</p>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CastItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesCreditsById } from 'services/themoviedb-api';\nimport CastItem from '../CastItem/CastItem';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [status, setStatus] = useState('pending');\n\n  useEffect(() => {\n    (async function () {\n      try {\n        const {\n          data: { cast },\n        } = await getMoviesCreditsById(movieId);\n        setCast(cast);\n        setStatus('resolved');\n      } catch (err) {\n        console.log(err);\n        setStatus('rejected');\n      }\n    })();\n  }, [movieId]);\n\n  if (status === 'pending') {\n    return <div>Loading cast...</div>;\n  }\n\n  if (status === 'rejected') {\n    return <div>Error, something wrong</div>;\n  }\n\n  if (status === 'resolved') {\n    return (\n      <div>\n        <ul className={css.list}>\n          {cast.map(cast => (\n            <CastItem key={cast.id} cast={cast} />\n          ))}\n          {cast.length === 0 && 'Casts not found'}\n        </ul>\n      </div>\n    );\n  }\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiNDY0YTRkMWY2YWM1YzQ2YmI1YWE4MzI5ZTYwNjE3YiIsInN1YiI6IjY0ZTM1NGI5ZDdjZDA2MDExZjM4ZjdjMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wbq1kfMBlGDMka7umUudFpe9xsh9J4H853rEikvtFzw';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = API_KEY;\n\nexport const getTrending = () => {\n  return axios.get(`trending/movie/day`);\n};\n\nexport const getMoviesFromQuery = name => {\n  return axios.get(`search/movie?query=${name}&page=1`);\n};\n\nexport const getMoviesById = movieId => {\n  return axios.get(`movie/${movieId}`);\n};\n\nexport const getMoviesCreditsById = movieId => {\n  return axios.get(`movie/${movieId}/credits`);\n};\n\nexport const getMoviesReviewsById = movieId => {\n  return axios.get(`movie/${movieId}/reviews`);\n};\n"],"names":["cast","name","character","profile_path","actorPhotoUrl","className","css","src","alt","movieId","useParams","useState","setCast","status","setStatus","useEffect","getMoviesCreditsById","data","console","log","map","id","length","axios","getTrending","getMoviesFromQuery","getMoviesById","getMoviesReviewsById"],"sourceRoot":""}
{"version":3,"file":"static/js/406.5b602465.chunk.js","mappings":"6OACA,EAAuB,0B,SC8BvB,EA3BoB,SAAC,GAA0B,IAAxBA,EAAuB,EAAvBA,iBACrB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAWA,OACE,+BACE,kBAAMC,UAAWC,EAAUC,SAXV,SAAAC,GACnBA,EAAMC,iBACNR,EAAiBE,EAClB,EAQG,WACE,kBACEO,KAAK,OACLC,YAAY,sBACZC,MAAOT,EACPU,SAXa,SAAAL,GACnBJ,EAAeI,EAAMM,OAAOF,MAC7B,KAWK,mBAAQG,KAAK,SAAb,sBAIP,E,0BCyBD,EAjDe,WACb,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEA,GAA4BhB,EAAAA,EAAAA,UAAS,IAArC,eAAOiB,EAAP,KAAeC,EAAf,KACMC,EAAQJ,EAAaK,IAAI,SAEzBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAEL,KACE,iBAAC,uGAGWK,EAAAA,EAAAA,IAAmBL,GAH9B,gBAEWM,EAFX,EAEGC,KAAQD,QAEVP,GAAU,OAAIO,IAJf,0CAAD,EAQD,CAFC,MAAOE,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACR,IAaJ,OACE,iCACE,SAAC,EAAD,CAAapB,iBAbQ,SAAAE,GACvB,IAAKA,EAIH,OAHAe,EAAgB,CAAC,GACjBE,EAAU,SACVY,MAAM,2BAIRd,EAAgB,CAAEG,MAAOlB,GAC1B,IAMIgB,EAAOc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMf,GAAlC,SACGY,KAFID,EADC,MASjB,C,oKChDDK,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAFE,6NAIK,IAAMC,EAAc,WACzB,OAAOD,EAAAA,EAAAA,IAAA,qBACR,EAEYb,EAAqB,SAAAhB,GAChC,OAAO6B,EAAAA,EAAAA,IAAA,6BAAgC7B,EAAhC,WACR,EAEY+B,EAAgB,SAAAC,GAC3B,OAAOH,EAAAA,EAAAA,IAAA,gBAAmBG,GAC3B,EAEYC,EAAuB,SAAAD,GAClC,OAAOH,EAAAA,EAAAA,IAAA,gBAAmBG,EAAnB,YACR,EAEYE,EAAuB,SAAAF,GAClC,OAAOH,EAAAA,EAAAA,IAAA,gBAAmBG,EAAnB,YACR,C","sources":["webpack://goit-react-hw-05-movies/./src/components/SearchMovie/SearchMovie.module.css?c852","components/SearchMovie/SearchMovie.jsx","pages/Movies.jsx","services/themoviedb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchMovie_form__wxS1-\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './SearchMovie.module.css';\n\nconst SearchMovie = ({ handleSearchForm }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    handleSearchForm(searchQuery);\n  };\n\n  const handleChange = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  return (\n    <>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <input\n          name=\"name\"\n          placeholder=\"Input name of movie\"\n          value={searchQuery}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </>\n  );\n};\n\nexport default SearchMovie;\n\nSearchMovie.propTypes = {\n  handleSearchForm: PropTypes.func.isRequired,\n};\n","import SearchMovie from 'components/SearchMovie/SearchMovie';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getMoviesFromQuery } from 'services/themoviedb-api';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [movies, setMovies] = useState([]);\n  const query = searchParams.get('query');\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) return;\n\n    try {\n      (async function () {\n        const {\n          data: { results },\n        } = await getMoviesFromQuery(query);\n        setMovies([...results]);\n      })();\n    } catch (err) {\n      console.log(err);\n    }\n  }, [query]);\n\n  const handleSearchForm = searchQuery => {\n    if (!searchQuery) {\n      setSearchParams({});\n      setMovies([]);\n      alert('Input the name of movie');\n      return;\n    }\n\n    setSearchParams({ query: searchQuery });\n  };\n\n  return (\n    <>\n      <SearchMovie handleSearchForm={handleSearchForm}></SearchMovie>\n\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiNDY0YTRkMWY2YWM1YzQ2YmI1YWE4MzI5ZTYwNjE3YiIsInN1YiI6IjY0ZTM1NGI5ZDdjZDA2MDExZjM4ZjdjMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wbq1kfMBlGDMka7umUudFpe9xsh9J4H853rEikvtFzw';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = API_KEY;\n\nexport const getTrending = () => {\n  return axios.get(`trending/movie/day`);\n};\n\nexport const getMoviesFromQuery = name => {\n  return axios.get(`search/movie?query=${name}&page=1`);\n};\n\nexport const getMoviesById = movieId => {\n  return axios.get(`movie/${movieId}`);\n};\n\nexport const getMoviesCreditsById = movieId => {\n  return axios.get(`movie/${movieId}/credits`);\n};\n\nexport const getMoviesReviewsById = movieId => {\n  return axios.get(`movie/${movieId}/reviews`);\n};\n"],"names":["handleSearchForm","useState","searchQuery","setSearchQuery","className","css","onSubmit","event","preventDefault","name","placeholder","value","onChange","target","type","useSearchParams","searchParams","setSearchParams","movies","setMovies","query","get","location","useLocation","useEffect","getMoviesFromQuery","results","data","err","console","log","alert","map","id","title","to","state","from","axios","getTrending","getMoviesById","movieId","getMoviesCreditsById","getMoviesReviewsById"],"sourceRoot":""}
{"version":3,"file":"static/js/18.1c69b2c0.chunk.js","mappings":"6PAeA,EAdmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACZC,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,QAChB,OACE,yBACE,4BACE,wBACE,uBAAID,OAEN,uBAAIC,QAIX,ECsBD,EA9BgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,gHAIaC,EAAAA,EAAAA,IAAqBN,GAJlC,gBAGaO,EAHb,EAGKC,KAAQD,QAEVH,EAAWG,GALd,gDAOGE,QAAQC,IAAR,MAPH,wDAAD,EAUD,GAAE,CAACV,KAEF,2BACGG,EAAQQ,QAAU,IAAK,+CACvBR,EAAQQ,OAAS,IAChB,wBACGR,EAAQS,KAAI,SAAAf,GAAM,OACjB,SAAC,EAAD,CAA4BA,OAAQA,GAAnBA,EAAOgB,GADP,QAO5B,C,oKC7BDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAFE,6NAIK,IAAMC,EAAc,WACzB,OAAOD,EAAAA,EAAAA,IAAA,qBACR,EAEYE,EAAqB,SAAAC,GAChC,OAAOH,EAAAA,EAAAA,IAAA,6BAAgCG,EAAhC,WACR,EAEYC,EAAgB,SAAAlB,GAC3B,OAAOc,EAAAA,EAAAA,IAAA,gBAAmBd,GAC3B,EAEYmB,EAAuB,SAAAnB,GAClC,OAAOc,EAAAA,EAAAA,IAAA,gBAAmBd,EAAnB,YACR,EAEYM,EAAuB,SAAAN,GAClC,OAAOc,EAAAA,EAAAA,IAAA,gBAAmBd,EAAnB,YACR,C","sources":["components/ReviewItem/ReviewItem.jsx","components/Reviews.jsx","services/themoviedb-api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nconst ReviewItem = ({ review }) => {\n  const { author, content } = review;\n  return (\n    <li>\n      <div>\n        <p>\n          <b>{author}</b>\n        </p>\n        <p>{content}</p>\n      </div>\n    </li>\n  );\n};\n\nexport default ReviewItem;\n\nReviewItem.propTypes = {\n  review: PropTypes.shape({\n    author: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesReviewsById } from 'services/themoviedb-api';\nimport ReviewItem from './ReviewItem/ReviewItem';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    (async function () {\n      try {\n        const {\n          data: { results },\n        } = await getMoviesReviewsById(movieId);\n        setReviews(results);\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }, [movieId]);\n  return (\n    <div>\n      {reviews.length <= 0 && <div>Reviews not found</div>}\n      {reviews.length > 0 && (\n        <ul>\n          {reviews.map(review => (\n            <ReviewItem key={review.id} review={review} />\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiNDY0YTRkMWY2YWM1YzQ2YmI1YWE4MzI5ZTYwNjE3YiIsInN1YiI6IjY0ZTM1NGI5ZDdjZDA2MDExZjM4ZjdjMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wbq1kfMBlGDMka7umUudFpe9xsh9J4H853rEikvtFzw';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = API_KEY;\n\nexport const getTrending = () => {\n  return axios.get(`trending/movie/day`);\n};\n\nexport const getMoviesFromQuery = name => {\n  return axios.get(`search/movie?query=${name}&page=1`);\n};\n\nexport const getMoviesById = movieId => {\n  return axios.get(`movie/${movieId}`);\n};\n\nexport const getMoviesCreditsById = movieId => {\n  return axios.get(`movie/${movieId}/credits`);\n};\n\nexport const getMoviesReviewsById = movieId => {\n  return axios.get(`movie/${movieId}/reviews`);\n};\n"],"names":["review","author","content","movieId","useParams","useState","reviews","setReviews","useEffect","getMoviesReviewsById","results","data","console","log","length","map","id","axios","getTrending","getMoviesFromQuery","name","getMoviesById","getMoviesCreditsById"],"sourceRoot":""}